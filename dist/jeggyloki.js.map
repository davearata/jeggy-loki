{"version":3,"sources":["jeggyloki.js"],"names":[],"mappings":"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","file":"jeggyloki.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('jeggy'), require('lodash'), require('lokijs')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'jeggy', 'lodash', 'lokijs'], factory) :\n  factory((global.jeggyloki = {}), global.jeggy, global._, global.Loki)\n}(this, function (exports, jeggy, _, Loki) { 'use strict';\n\n  _ = ('default' in _ ? _['default'] : _);\n  Loki = ('default' in Loki ? Loki['default'] : Loki);\n\n  const _LokiCollection__buildLokiQuery = function buildLokiQuery(query) {\n    if (_.keys(query).length > 1) {\n      const queryArray = _.map(_.keys(query), (queryKey) => {\n        const result = {};\n        result[queryKey] = query[queryKey];\n        return result;\n      });\n      query = {$and: queryArray};\n    }\n    return query;\n  };\n\n  const _LokiCollection__buildLokiIdQuery = function buildLokiIdQuery(idKey, id) {\n    const query = {};\n    query[idKey] = id;\n    return query;\n  };\n\n  const _LokiCollection__applyProjection = function applyProjection(doc, projection) {\n    let result = {};\n    const projectionArr = projection.split(' ');\n    if (_.includes(projection, '-')) {\n      //take all fields excepts ones excluded\n      result = _.assign(result, doc);\n      _.each(projectionArr, (projectionKey) => {\n        if (_.includes(projectionKey, '-')) {\n          projectionKey = _.trim(projectionKey, '-');\n          result = _.omit(result, projectionKey);\n        }\n      });\n    } else {\n      //only take fields specified\n      _.each(projectionArr, (projectionKey) => {\n        if (_.includes(projectionKey, '+')) {\n          projectionKey = _.trim(projectionKey, '+');\n        }\n        result[projectionKey] = doc[projectionKey];\n      });\n    }\n\n    return result;\n  };\n\n  class LokiCollection extends jeggy.Collection {\n    constructor(name, nativeLokiCollection, idKey) {\n      super(name);\n      if (!nativeLokiCollection) {\n        throw new Error('a LokiCollection must be intiialized with a native lokiJS collection');\n      }\n      this.nativeLokiCollection = nativeLokiCollection;\n      this.idKey = idKey || '_id';\n    }\n\n    find(query, projection) {\n      const nativeLokiCollection = this.nativeLokiCollection;\n      return new Promise((resolve, reject) => {\n        try {\n          query = _LokiCollection__buildLokiQuery(query);\n          if (_.isUndefined(query)) {\n            query = {};\n          }\n          let result = nativeLokiCollection.find(query);\n          if (result !== null) {\n            result = _.clone(result, true);\n            if (_.isString(projection)) {\n              result = _.map(result, (doc) => {\n                return _LokiCollection__applyProjection(doc, projection);\n              });\n            }\n          }\n          resolve(result);\n        } catch (error) {\n          reject(error);\n        }\n      });\n    }\n\n    findOne(query, projection) {\n      const nativeLokiCollection = this.nativeLokiCollection;\n      return new Promise((resolve, reject) => {\n        try {\n          query = _LokiCollection__buildLokiQuery(query);\n          if (_.isUndefined(query)) {\n            query = {};\n          }\n          let doc = nativeLokiCollection.find(query);\n          if (doc === null || _.isEmpty(doc)) {\n            return resolve(null);\n          }\n          if (_.isArray(doc)) {\n            doc = doc[0];\n          }\n          doc = _.assign({}, doc);\n          if (_.isString(projection) && _.isObject(doc)) {\n            doc = _LokiCollection__applyProjection(doc, projection);\n          }\n          resolve(doc);\n        } catch (error) {\n          reject(error);\n        }\n      });\n    }\n\n    findById(id, projection) {\n      const query = _LokiCollection__buildLokiIdQuery(this.idKey, id);\n      return this.findOne(query, projection);\n    }\n\n    create(doc) {\n      const nativeLokiCollection = this.nativeLokiCollection;\n      return new Promise((resolve, reject) => {\n        try {\n          const createdDoc = nativeLokiCollection.insert(doc);\n          if (createdDoc === null) {\n            return resolve(createdDoc);\n          }\n          resolve(_.assign({}, createdDoc));\n        } catch (error) {\n          reject(error);\n        }\n      });\n    }\n\n    removeWhere(query) {\n      const nativeLokiCollection = this.nativeLokiCollection;\n      return new Promise((resolve, reject) => {\n        try {\n          query = _LokiCollection__buildLokiQuery(query);\n          resolve(nativeLokiCollection.removeWhere(query));\n        } catch (error) {\n          reject(error);\n        }\n      });\n    }\n\n    remove(doc) {\n      const nativeLokiCollection = this.nativeLokiCollection;\n      const query = _LokiCollection__buildLokiIdQuery(this.idKey, doc[this.idKey]);\n      return new Promise((resolve, reject) => {\n        try {\n          const foundDoc = _.assign({}, nativeLokiCollection.findOne(query));\n          if (_.isEmpty(foundDoc)) {\n            throw new Error('unknown doc id:' + doc.id);\n          }\n          resolve(nativeLokiCollection.remove(doc));\n        } catch (error) {\n          reject(error);\n        }\n      });\n    }\n\n    update(doc) {\n      const nativeLokiCollection = this.nativeLokiCollection;\n      const query = _LokiCollection__buildLokiIdQuery(this.idKey, doc[this.idKey]);\n      return this.findOne(query)\n        .then(foundDoc => {\n          if (_.isEmpty(foundDoc)) {\n            throw new Error('unknown doc id:' + doc.id);\n          }\n\n          foundDoc = _.assign(foundDoc, doc);\n          nativeLokiCollection.update(foundDoc);\n          return _.assign({}, foundDoc);\n        });\n    }\n  }\n\n  exports.LokiCollection = LokiCollection;\n\n  const _LokiAdapter__populateDoc = function populateDoc(doc, fieldKey, collection) {\n    const id = doc[fieldKey];\n    if (_.isUndefined(id) || _.isNull(id)) {\n      return Promise.resolve();\n    }\n\n    if (_.isArray(id)) {\n      const array = id;\n      const populatedArray = [];\n      const promises = _.map(array, (itemId) => {\n        return collection.findById(itemId)\n          .then((foundDoc) => {\n            if (!foundDoc) {\n              throw new Error('population  failed');\n            }\n\n            populatedArray.push(foundDoc);\n          });\n      });\n      return Promise.all(promises)\n        .then(() => {\n          doc[fieldKey] = populatedArray;\n          return doc;\n        });\n    }\n\n    return collection.findById(id)\n      .then((foundDoc) => {\n        if (!foundDoc) {\n          throw new Error('population  failed');\n        }\n\n        doc[fieldKey] = foundDoc;\n      });\n  };\n\n  class LokiAdapter extends jeggy.Adapter {\n    constructor(loki) {\n      super();\n      if (_.isString(loki)) {\n        loki = new Loki(loki);\n      }\n\n      this.loki = loki;\n      this.collections = {};\n    }\n\n    addCollection(name, idKey) {\n      let collection;\n      if (name instanceof LokiCollection) {\n        collection = name;\n        name = collection.name;\n      } else {\n        if (!_.isString(name) || _.isEmpty(name)) {\n          throw new Error('must provide a name when adding a collection');\n        }\n        const lokiCollection = this.loki.addCollection(name);\n        collection = new LokiCollection(name, lokiCollection, idKey);\n      }\n\n      this.collections[name] = collection;\n      return collection;\n    }\n\n    getCollection(name) {\n      if (!this.collections[name]) {\n        throw new Error('unknown collection: ' + name);\n      }\n      return this.collections[name];\n    }\n\n    getCollections() {\n      return this.collections;\n    }\n\n    populate(docs, fieldKey, collectionName) {\n      try {\n        if (!docs) {\n          return Promise.reject(new Error('tried to populate a null value'));\n        }\n\n        const collection = this.getCollection(collectionName);\n\n        if (!_.isArray(docs)) {\n          docs = [docs];\n        }\n\n        const promises = _.map(docs, doc => {\n          return _LokiAdapter__populateDoc(doc, fieldKey, collection);\n        });\n\n        return Promise.all(promises)\n          .then(() => {\n            return docs;\n          });\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    }\n  }\n\n  exports.LokiAdapter = LokiAdapter;\n\n\n\n}));\n"],"sourceRoot":"/source/"}
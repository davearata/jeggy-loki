{"version":3,"sources":["jeggyloki.js"],"names":[],"mappings":"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","file":"jeggyloki.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('jeggy'), require('lodash'), require('co'), require('lokijs')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'jeggy', 'lodash', 'co', 'lokijs'], factory) :\n  factory((global.jeggyloki = {}), global.jeggy, global._, global.co, global.Loki)\n}(this, function (exports, jeggy, _, co, Loki) { 'use strict';\n\n  _ = ('default' in _ ? _['default'] : _);\n  co = ('default' in co ? co['default'] : co);\n  Loki = ('default' in Loki ? Loki['default'] : Loki);\n\n  const _LokiCollection__buildLokiQuery = function buildLokiQuery(query) {\n    if (_.keys(query).length > 1) {\n      const queryArray = _.map(_.keys(query), (queryKey) => {\n        const result = {};\n        result[queryKey] = query[queryKey];\n        return result;\n      });\n      query = {$and: queryArray};\n    }\n    return query;\n  };\n\n  const _LokiCollection__buildLokiIdQuery = function buildLokiIdQuery(idKey, id) {\n    const query = {};\n    query[idKey] = id;\n    return query;\n  };\n\n  const _LokiCollection__applyProjection = function applyProjection(doc, projection) {\n    let result = {};\n    const projectionArr = projection.split(' ');\n    if (_.includes(projection, '-')) {\n      //take all fields excepts ones excluded\n      result = _.assign(result, doc);\n      _.each(projectionArr, (projectionKey) => {\n        if (_.includes(projectionKey, '-')) {\n          projectionKey = _.trim(projectionKey, '-');\n          result = _.omit(result, projectionKey);\n        }\n      });\n    } else {\n      //only take fields specified\n      _.each(projectionArr, (projectionKey) => {\n        if (_.includes(projectionKey, '+')) {\n          projectionKey = _.trim(projectionKey, '+');\n        }\n        result[projectionKey] = doc[projectionKey];\n      });\n    }\n\n    return result;\n  };\n\n  class LokiCollection extends jeggy.Collection {\n    constructor(name, nativeLokiCollection, idKey) {\n      super(name);\n      if (!nativeLokiCollection) {\n        throw new Error('a LokiCollection must be intiialized with a native lokiJS collection');\n      }\n      this.nativeLokiCollection = nativeLokiCollection;\n      this.idKey = idKey || '_id';\n    }\n\n    find(query) {\n      const nativeLokiCollection = this.nativeLokiCollection;\n      return co(function* () {\n        query = _LokiCollection__buildLokiQuery(query);\n        const result = nativeLokiCollection.find(query);\n        if (result === null) {\n          return result;\n        }\n        return _.clone(result, true);\n      });\n    }\n\n    findOne(query) {\n      const nativeLokiCollection = this.nativeLokiCollection;\n      return co(function* () {\n        query = _LokiCollection__buildLokiQuery(query);\n        if(_.isUndefined(query)) {\n          query = {};\n        }\n        let doc = nativeLokiCollection.findOne(query);\n        if (doc === null) {\n          return doc;\n        }\n        if(_.isArray(doc)) {\n          doc = doc[0];\n        }\n        return _.assign({}, doc);\n      });\n    }\n\n    findById(id, projection) {\n      const nativeLokiCollection = this.nativeLokiCollection;\n      const query = _LokiCollection__buildLokiIdQuery(this.idKey, id);\n      return co(function* () {\n        let doc = nativeLokiCollection.findOne(query);\n        if (doc === null) {\n          return doc;\n        }\n        doc = _.assign({}, doc);\n        if (_.isString(projection) && _.isObject(doc)) {\n          doc = _LokiCollection__applyProjection(doc, projection);\n        }\n        return doc;\n      });\n    }\n\n    create(doc) {\n      const nativeLokiCollection = this.nativeLokiCollection;\n      return co(function* () {\n        const createdDoc = nativeLokiCollection.insert(doc);\n        if (createdDoc === null) {\n          return createdDoc;\n        }\n        return _.assign({}, createdDoc);\n      });\n    }\n\n    removeWhere(query) {\n      const nativeLokiCollection = this.nativeLokiCollection;\n      return co(function* () {\n        query = _LokiCollection__buildLokiQuery(query);\n        return nativeLokiCollection.removeWhere(query);\n      });\n    }\n\n    remove(doc) {\n      const nativeLokiCollection = this.nativeLokiCollection;\n      const query = _LokiCollection__buildLokiIdQuery(this.idKey, doc[this.idKey]);\n      return co(function* () {\n        const foundDoc = _.assign({}, nativeLokiCollection.findOne(query));\n        if (_.isEmpty(foundDoc)) {\n          throw new Error('unknown doc id:' + doc.id);\n        }\n        return nativeLokiCollection.remove(doc);\n      });\n    }\n\n    update(doc) {\n      const nativeLokiCollection = this.nativeLokiCollection;\n      const query = _LokiCollection__buildLokiIdQuery(this.idKey, doc[this.idKey]);\n      return co(function* () {\n        let foundDoc = _.assign({}, nativeLokiCollection.findOne(query));\n        if (_.isEmpty(foundDoc)) {\n          throw new Error('unknown doc id:' + doc.id);\n        }\n        foundDoc = _.merge(foundDoc, doc);\n        return _.assign({}, nativeLokiCollection.update(foundDoc));\n      });\n    }\n  }\n\n  exports.LokiCollection = LokiCollection;\n\n  const _LokiAdapter__populateDoc = function populateDoc(doc, fieldKey, collection) {\n    const id = doc[fieldKey];\n    if (_.isUndefined(id)) {\n      throw new Error('Unknown field: ' + fieldKey);\n    }\n\n    return collection.findById(id)\n      .then((foundDoc) => {\n        if (!foundDoc) {\n          throw new Error('population  failed');\n        }\n\n        doc[fieldKey] = foundDoc;\n      });\n  };\n\n  class LokiAdapter extends jeggy.Adapter {\n    constructor(loki) {\n      super();\n      if (_.isString(loki)) {\n        loki = new Loki(loki);\n      }\n\n      this.loki = loki;\n      this.collections = {};\n    }\n\n    addCollection(name, idKey) {\n      let collection;\n      if (name instanceof LokiCollection) {\n        collection = name;\n        name = collection.name;\n      } else {\n        if (!_.isString(name) || _.isEmpty(name)) {\n          throw new Error('must provide a name when adding a collection');\n        }\n        const lokiCollection = this.loki.addCollection(name);\n        collection = new LokiCollection(name, lokiCollection, idKey);\n      }\n\n      this.collections[name] = collection;\n      return collection;\n    }\n\n    getCollection(name) {\n      if (!this.collections[name]) {\n        throw new Error('unknown collection: ' + name);\n      }\n      return this.collections[name];\n    }\n\n    getCollections() {\n      return this.collections;\n    }\n\n    populate(docs, fieldKey, collectionName) {\n      const getCollection = this.getCollection.bind(this);\n      return co(function* () {\n        if (!docs) {\n          throw new Error('tried to populate a null value');\n        }\n\n        const collection = getCollection(collectionName);\n\n        if (!_.isArray(docs)) {\n          docs = [docs];\n        }\n\n        const promises = _.map(docs, doc => {\n          return _LokiAdapter__populateDoc(doc, fieldKey, collection);\n        });\n\n        return Promise.all(promises)\n          .then(() => {\n            return docs;\n          });\n      });\n    }\n  }\n\n  exports.LokiAdapter = LokiAdapter;\n\n  require('babel/polyfill');\n\n}));\n"],"sourceRoot":"/source/"}